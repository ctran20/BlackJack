{"version":3,"sources":["actions/bet.js","reducers/bet.js","constants/CardInfo.js","imgs/logo.png","imgs/ten.png","imgs/quart.png","imgs/half.png","imgs/hundred.png","imgs/onek.png","components/Buttons/StyledButton.js","components/Buttons/Buttons.js","components/Card/Card.js","components/Card/CardList.js","components/Card/StarterCard.js","components/Buttons/Chip.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_CHIP","TAKE_CHIP","BET_CHIP","addChip","amount","type","payload","takeChip","initialState","total","bet","MENU","GAME","STAND","POST","BET","LOSE","Suits","Ranks","RanksValues","A","J","Q","K","StyledButton","func","label","style","width","borderRadius","className","onClick","Buttons","Hit","Stand","StartGame","gameState","setGameState","Reset","Result","Bet","useSelector","state","setChips","dispatch","useDispatch","Card","props","rank","deck","side","height","CardList","cards","dealer","checkSide","i","cardComponent","map","user","suit","StarterCard","cardList","Chip","value","imgSrc","alt","src","App","Dealer","Math","floor","random","length","Player","useState","playerCards","setPlayerCards","dealerCards","setDealerCards","title","setTitle","playerScore","setPlayerScore","dealerScore","setDealerScore","CountCard","score","allAs","x","pickChip","logo","newCards","updatedCards","concat","textAlign","ten","quart","half","hundo","onek","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","Object","assign","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.260ce6ca.chunk.js","sourcesContent":["export const ADD_CHIP = 'ADD_CHIP';\r\nexport const TAKE_CHIP = 'TAKE_CHIP';\r\nexport const BET_CHIP = 'BET_CHIP';\r\n\r\nexport const addChip = (amount) => ({\r\n  type: ADD_CHIP,\r\n  payload: amount,\r\n});\r\n\r\nexport const takeChip = (amount) => ({\r\n  type: TAKE_CHIP,\r\n  payload: amount,\r\n});\r\n\r\nexport const betChip = () => ({\r\n  type: BET_CHIP,\r\n});\r\n","import { ADD_CHIP, BET_CHIP, TAKE_CHIP } from '../actions/bet';\r\n\r\nconst initialState = {\r\n  total: 250,\r\n  bet: 0,\r\n};\r\n\r\nexport const setChips = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case ADD_CHIP:\r\n      return Object.assign({}, state, {\r\n        bet: state.bet + action.payload,\r\n        total: state.total - action.payload,\r\n      });\r\n    case BET_CHIP:\r\n      return Object.assign({}, state, {\r\n        bet: 0,\r\n      });\r\n    case TAKE_CHIP:\r\n      return Object.assign({}, state, {\r\n        total: state.total + action.payload,\r\n        bet: 0,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const MENU = 'MENU';\r\nexport const GAME = 'GAME';\r\nexport const STAND = 'STAND';\r\nexport const POST = 'POST';\r\nexport const BET = 'BET';\r\nexport const LOSE = 'LOSE';\r\n\r\nexport const Suits = ['♠', '♥', '♦', '♣'];\r\n\r\nexport const Ranks = [\r\n  'A',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  '10',\r\n  'J',\r\n  'Q',\r\n  'K',\r\n];\r\n\r\nexport const RanksValues = {\r\n  1: 1,\r\n  2: 2,\r\n  3: 3,\r\n  4: 4,\r\n  5: 5,\r\n  6: 6,\r\n  7: 7,\r\n  8: 8,\r\n  9: 9,\r\n  10: 10,\r\n  A: 10,\r\n  J: 10,\r\n  Q: 10,\r\n  K: 10,\r\n};\r\n\r\nexport const Layouts = {};\r\n","export default __webpack_public_path__ + \"static/media/logo.8d9a8e65.png\";","export default __webpack_public_path__ + \"static/media/ten.98b254a8.png\";","export default __webpack_public_path__ + \"static/media/quart.5813e63b.png\";","export default __webpack_public_path__ + \"static/media/half.fb24cbca.png\";","export default __webpack_public_path__ + \"static/media/hundred.10865141.png\";","export default __webpack_public_path__ + \"static/media/onek.75f1bf99.png\";","import React from 'react';\r\n\r\nconst StyledButton = ({ func, label }) => {\r\n  return (\r\n    <button\r\n      style={{ width: 150, borderRadius: 10 }}\r\n      className=\"pa3 ma4 ba b--black bg-yellow\"\r\n      type=\"submit\"\r\n      onClick={func}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default StyledButton;\r\n","import React from 'react';\r\nimport StyledButton from './StyledButton';\r\nimport { GAME, MENU, STAND, POST, BET, LOSE } from '../../constants/CardInfo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { takeChip } from '../../actions/bet';\r\n\r\nconst Buttons = ({\r\n  Hit,\r\n  Stand,\r\n  StartGame,\r\n  gameState,\r\n  setGameState,\r\n  Reset,\r\n  Result,\r\n  Bet,\r\n}) => {\r\n  const { total } = useSelector((state) => state.setChips);\r\n  const dispatch = useDispatch();\r\n  switch (gameState) {\r\n    case GAME:\r\n      return (\r\n        <div>\r\n          <StyledButton func={Hit} label=\"Hit\" />\r\n          <StyledButton func={Stand} label=\"Stand\" />\r\n        </div>\r\n      );\r\n    case BET:\r\n      return (\r\n        <div>\r\n          <StyledButton func={StartGame} label=\"Start\" />\r\n        </div>\r\n      );\r\n    case MENU:\r\n      return (\r\n        <div>\r\n          <StyledButton func={Bet} label=\"Start Game\" />\r\n        </div>\r\n      );\r\n    case STAND:\r\n      return (\r\n        <div>\r\n          <StyledButton func={Result} label=\"Next\" />\r\n        </div>\r\n      );\r\n    case LOSE:\r\n      return (\r\n        <div>\r\n          <StyledButton\r\n            func={() => {\r\n              setGameState(MENU);\r\n              dispatch(takeChip(250));\r\n            }}\r\n            label=\"Restart\"\r\n          />\r\n        </div>\r\n      );\r\n    case POST:\r\n      return (\r\n        <div>\r\n          <StyledButton\r\n            func={() => {\r\n              if (total === 0) {\r\n                setGameState('LOSE');\r\n              } else {\r\n                setGameState(MENU);\r\n              }\r\n              Reset();\r\n            }}\r\n            label=\"Menu\"\r\n          />\r\n        </div>\r\n      );\r\n    default:\r\n      return <div>{`Error! In ${gameState}`}</div>;\r\n  }\r\n};\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const { rank, deck, side } = props;\r\n  return (\r\n    <div\r\n      className=\"bg-white dib br4 ba b--black ma1 grow shadow-5 f1 flex-column\"\r\n      style={{ width: 170, height: 250 }}\r\n    >\r\n      {side ? (\r\n        <div\r\n          className={\r\n            deck === '♠' || deck === '♣' ? 'center black ma3' : 'center red ma3'\r\n          }\r\n        >\r\n          <h2>{rank}</h2>\r\n          <h2>{deck}</h2>\r\n        </div>\r\n      ) : (\r\n        <div className=\"cardBack br4 ba b--black center\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { GAME, MENU, BET } from '../../constants/CardInfo';\r\n\r\nconst CardList = ({ cards, gameState, dealer }) => {\r\n  const checkSide = (i) => {\r\n    if (i === 1 && dealer && gameState === GAME) {\r\n      return false;\r\n    } else if (i < 2 && (gameState === MENU || gameState === BET)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const cardComponent = cards.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        rank={cards[i].rank}\r\n        deck={cards[i].suit}\r\n        side={!!checkSide(i)}\r\n      />\r\n    );\r\n  });\r\n  return <div className=\"center\">{cardComponent}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport CardList from './CardList';\r\n\r\nconst StarterCard = ({ gameState, cardList, dealer }) => {\r\n  return (\r\n    <div className=\"center ma3\">\r\n      <CardList cards={cardList} gameState={gameState} dealer={dealer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarterCard;\r\n","import React from 'react';\r\n\r\nconst Chip = ({ value, total, imgSrc, addChip }) => {\r\n  if (value > total) {\r\n    return <div></div>;\r\n  } else {\r\n    return (\r\n      <img\r\n        style={{ width: 150 }}\r\n        className=\"ma2 pointer grow\"\r\n        alt=\"chip\"\r\n        src={imgSrc}\r\n        onClick={() => {\r\n          addChip(value);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default Chip;\r\n","import React, { useState } from 'react';\nimport {\n  Suits,\n  Ranks,\n  RanksValues,\n  GAME,\n  MENU,\n  STAND,\n  POST,\n  BET,\n  LOSE,\n} from './constants/CardInfo';\nimport logo from './imgs/logo.png';\nimport ten from './imgs/ten.png';\nimport quart from './imgs/quart.png';\nimport half from './imgs/half.png';\nimport hundo from './imgs/hundred.png';\nimport onek from './imgs/onek.png';\nimport Buttons from './components/Buttons/Buttons';\nimport StarterCard from './components/Card/StarterCard';\nimport Chip from './components/Buttons/Chip';\n\nimport 'tachyons';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addChip, betChip, takeChip } from './actions/bet';\n\nfunction App() {\n  const Dealer = [\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n  ];\n  const Player = [\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n  ];\n  const [gameState, setGameState] = useState(MENU);\n  const [playerCards, setPlayerCards] = useState(Player);\n  const [dealerCards, setDealerCards] = useState(Dealer);\n  const [title, setTitle] = useState('');\n  const [playerScore, setPlayerScore] = useState(0);\n  const [dealerScore, setDealerScore] = useState(0);\n  const { total, bet } = useSelector((state) => state.setChips);\n  const dispatch = useDispatch();\n\n  const Hit = () => {\n    const newCards = {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    };\n    const updatedCards = playerCards.concat(newCards);\n    let score = CountCard(updatedCards);\n\n    setPlayerScore(score);\n    setPlayerCards(updatedCards);\n\n    if (score > 21) {\n      setTitle('Bust!');\n      setGameState(POST);\n    }\n  };\n\n  const CountCard = (cards) => {\n    let score = 0;\n    let allAs = 0;\n    for (let x in cards) {\n      if (cards[x].rank === 'A') {\n        allAs++;\n      }\n      score += RanksValues[cards[x].rank];\n    }\n\n    for (let i = 0; i < allAs; i++) {\n      if (score > 21) {\n        score -= 9;\n      }\n    }\n\n    return score;\n  };\n\n  const DealerHit = () => {\n    const newCards = {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    };\n    const updatedCards = dealerCards.concat(newCards);\n    let score = CountCard(updatedCards);\n\n    setDealerScore(score);\n    setDealerCards(updatedCards);\n\n    if (score > 21) {\n      setTitle('You Win!');\n      dispatch(takeChip(bet * 2));\n      setGameState(POST);\n      return;\n    }\n    if (score === playerScore) {\n      setTitle('Tie!');\n      dispatch(takeChip(bet));\n      setGameState(POST);\n      return;\n    }\n    if (playerScore < score) {\n      setTitle('Dealer Win!');\n      setGameState(POST);\n    }\n  };\n\n  const Stand = () => {\n    setGameState(STAND);\n    if (playerScore < dealerScore) {\n      setTitle('You Lose!');\n      setGameState(POST);\n    }\n  };\n\n  const Reset = () => {\n    setPlayerCards(Player);\n    setDealerCards(Dealer);\n    setPlayerScore(0);\n    setDealerScore(0);\n    dispatch(betChip());\n    setTitle('');\n  };\n\n  const Bet = () => {\n    setGameState(BET);\n    setTitle('$0');\n  };\n\n  const pickChip = (value) => {\n    dispatch(addChip(value));\n    setTitle(`$${value + bet}`);\n  };\n\n  const StartGame = () => {\n    setGameState(GAME);\n    if (\n      (playerCards[0].rank === 'A' &&\n        RanksValues[playerCards[1].rank] === 10) ||\n      (playerCards[1].rank === 'A' && RanksValues[playerCards[0].rank] === 10)\n    ) {\n      dispatch(takeChip(bet * 2));\n      setTitle('Blackjack!');\n      setGameState(POST);\n    }\n    setPlayerScore(\n      RanksValues[playerCards[0].rank] + RanksValues[playerCards[1].rank]\n    );\n    setDealerScore(\n      RanksValues[dealerCards[0].rank] + RanksValues[dealerCards[1].rank]\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"center\">\n        <img style={{ width: 300 }} alt=\"logo\" src={logo} />\n      </div>\n      {gameState === LOSE ? (\n        <div className=\"center f3\">\n          <h1>You've lost it all!</h1>\n        </div>\n      ) : (\n        <div>\n          <StarterCard\n            cardList={dealerCards}\n            gameState={gameState}\n            dealer={true}\n          />\n          <div className=\"center\">\n            <h1>{title}</h1>\n          </div>\n          <StarterCard\n            cardList={playerCards}\n            gameState={gameState}\n            dealer={false}\n          />\n        </div>\n      )}\n      <div className=\"center\">\n        <Buttons\n          Hit={Hit}\n          Stand={Stand}\n          gameState={gameState}\n          setGameState={setGameState}\n          StartGame={StartGame}\n          Reset={Reset}\n          Result={DealerHit}\n          Bet={Bet}\n          addChip={addChip}\n        />\n      </div>\n      <div className=\"bank\">\n        <div\n          style={{\n            width: 150,\n            borderRadius: 5,\n            textAlign: 'center',\n          }}\n          className=\"pa3 ba b--black bg-yellow\"\n        >\n          <h1>{`Total: $${total}`}</h1>\n        </div>\n        {gameState === BET ? (\n          <div>\n            <Chip value={10} total={total} addChip={pickChip} imgSrc={ten} />\n            <Chip value={20} total={total} addChip={pickChip} imgSrc={quart} />\n            <Chip value={50} total={total} addChip={pickChip} imgSrc={half} />\n            <Chip value={100} total={total} addChip={pickChip} imgSrc={hundo} />\n            <Chip value={1000} total={total} addChip={pickChip} imgSrc={onek} />\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n      {/* <div className=\"center\">\n        <h1>Dealer: {dealerScore}</h1>\n      </div>\n      <div className=\"center\">\n        <h1>Player: {playerScore}</h1>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { setChips } from './reducers/bet';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootReducer = combineReducers({ setChips });\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}