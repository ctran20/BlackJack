{"version":3,"sources":["constants/CardInfo.js","actions/card.js","reducers/card.js","imgs/logo.png","components/Buttons/StyledButton.js","components/Buttons/Buttons.js","components/Card/Card.js","components/Card/CardList.js","components/Card/StarterCard.js","App.js","reportWebVitals.js","index.js"],"names":["MENU","GAME","STAND","POST","Suits","Ranks","RanksValues","A","J","Q","K","HIT","startedCards","playerCards","StyledButton","func","label","style","width","borderRadius","className","type","onClick","Buttons","Hit","Stand","StartGame","gameState","setGameState","Reset","Result","Card","props","rank","deck","side","height","CardList","cards","dealer","checkSide","i","cardComponent","map","user","suit","StarterCard","cardList","App","Dealer","Math","floor","random","length","Player","useState","setPlayerCards","dealerCards","setDealerCards","title","setTitle","playerScore","setPlayerScore","dealerScore","setDealerScore","CountCard","score","allAs","x","alt","src","logo","newCards","updatedCards","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","playerChoice","state","action","Object","assign","payload","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8167234f.chunk.js","sourcesContent":["export const MENU = 'MENU';\r\nexport const GAME = 'GAME';\r\nexport const STAND = 'STAND';\r\nexport const POST = 'POST';\r\n\r\nexport const Suits = ['♠', '♥', '♦', '♣'];\r\n\r\nexport const Ranks = [\r\n  'A',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  '10',\r\n  'J',\r\n  'Q',\r\n  'K',\r\n];\r\n\r\nexport const RanksValues = {\r\n  1: 1,\r\n  2: 2,\r\n  3: 3,\r\n  4: 4,\r\n  5: 5,\r\n  6: 6,\r\n  7: 7,\r\n  8: 8,\r\n  9: 9,\r\n  10: 10,\r\n  A: 10,\r\n  J: 10,\r\n  Q: 10,\r\n  K: 10,\r\n};\r\n\r\nexport const Layouts = {};\r\n","import { Suits, Ranks, RanksValues, Layouts } from '../constants/CardInfo';\r\nexport const HIT = 'HIT';\r\n\r\n// export const Hit = () => {\r\n//   const newCards = playerCards.concat({\r\n//     rank: Ranks[Math.floor(Math.random() * Ranks.length)],\r\n//     suit: Suits[Math.floor(Math.random() * Suits.length)],\r\n//   });\r\n//   setPlayerCards(newCards);\r\n// };\r\n\r\nexport const hit = () => ({\r\n  type: HIT,\r\n  payload: {\r\n    rank: Ranks[Math.floor(Math.random() * Ranks.length)],\r\n    suit: Suits[Math.floor(Math.random() * Suits.length)],\r\n  },\r\n});\r\n","import { HIT } from '../actions/card';\r\n\r\nconst startedCards = {\r\n  playerCards: [],\r\n};\r\n\r\nexport const playerChoice = (state = startedCards, action) => {\r\n  switch (action.type) {\r\n    case HIT:\r\n      return Object.assign({}, state, {\r\n        playerCards: state.playerCards.concat(action.payload),\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.8d9a8e65.png\";","import React from 'react';\r\n\r\nconst StyledButton = ({ func, label }) => {\r\n  return (\r\n    <button\r\n      style={{ width: 150, borderRadius: 10 }}\r\n      className=\"pa3 ma4 ba b--black bg-yellow\"\r\n      type=\"submit\"\r\n      onClick={func}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default StyledButton;\r\n","import React from 'react';\r\nimport StyledButton from './StyledButton';\r\nimport { GAME, MENU, STAND, POST } from '../../constants/CardInfo';\r\n\r\nconst Buttons = ({\r\n  Hit,\r\n  Stand,\r\n  StartGame,\r\n  gameState,\r\n  setGameState,\r\n  Reset,\r\n  Result,\r\n}) => {\r\n  switch (gameState) {\r\n    case GAME:\r\n      return (\r\n        <div>\r\n          <StyledButton func={Hit} label=\"Hit\" />\r\n          <StyledButton func={Stand} label=\"Stand\" />\r\n        </div>\r\n      );\r\n    case MENU:\r\n      return (\r\n        <div>\r\n          <StyledButton func={StartGame} label=\"Start\" />\r\n        </div>\r\n      );\r\n    case STAND:\r\n      return (\r\n        <div>\r\n          <StyledButton func={Result} label=\"Next\" />\r\n        </div>\r\n      );\r\n    case POST:\r\n      return (\r\n        <div>\r\n          <StyledButton\r\n            func={() => {\r\n              Reset();\r\n              setGameState(MENU);\r\n            }}\r\n            label=\"Menu\"\r\n          />\r\n        </div>\r\n      );\r\n    default:\r\n      return <div>{`Error! In ${gameState}`}</div>;\r\n  }\r\n};\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const { rank, deck, side } = props;\r\n  return (\r\n    <div\r\n      className=\"bg-white dib br4 ba b--black ma1 grow shadow-5 f1 flex-column\"\r\n      style={{ width: 170, height: 250 }}\r\n    >\r\n      {side ? (\r\n        <div\r\n          className={\r\n            deck === '♠' || deck === '♣' ? 'center black ma3' : 'center red ma3'\r\n          }\r\n        >\r\n          <h2>{rank}</h2>\r\n          <h2>{deck}</h2>\r\n        </div>\r\n      ) : (\r\n        <div className=\"cardBack br4 ba b--black center\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { GAME, MENU } from '../../constants/CardInfo';\r\n\r\nconst CardList = ({ cards, gameState, dealer }) => {\r\n  const checkSide = (i) => {\r\n    if (i === 1 && dealer && gameState === GAME) {\r\n      return false;\r\n    } else if (i < 2 && gameState === MENU) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const cardComponent = cards.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        rank={cards[i].rank}\r\n        deck={cards[i].suit}\r\n        side={!!checkSide(i)}\r\n      />\r\n    );\r\n  });\r\n  return <div className=\"center\">{cardComponent}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport CardList from './CardList';\r\n\r\nconst StarterCard = ({ gameState, cardList, dealer }) => {\r\n  return (\r\n    <div className=\"center ma3\">\r\n      <CardList cards={cardList} gameState={gameState} dealer={dealer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarterCard;\r\n","import React, { useState, useEffect, useReducer } from 'react';\nimport logo from './imgs/logo.png';\nimport Buttons from './components/Buttons/Buttons';\nimport StarterCard from './components/Card/StarterCard';\nimport {\n  Suits,\n  Ranks,\n  RanksValues,\n  GAME,\n  MENU,\n  STAND,\n  POST,\n} from './constants/CardInfo';\nimport 'tachyons';\nimport './App.css';\n\nfunction App() {\n  const Dealer = [\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n  ];\n  const Player = [\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n  ];\n  const [gameState, setGameState] = useState(MENU);\n  const [playerCards, setPlayerCards] = useState(Player);\n  const [dealerCards, setDealerCards] = useState(Dealer);\n  const [title, setTitle] = useState('');\n  const [playerScore, setPlayerScore] = useState(0);\n  const [dealerScore, setDealerScore] = useState(0);\n\n  const Hit = () => {\n    const newCards = {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    };\n    const updatedCards = playerCards.concat(newCards);\n    let score = CountCard(updatedCards);\n\n    setPlayerScore(score);\n    setPlayerCards(updatedCards);\n\n    if (score > 21) {\n      setTitle('Bust!');\n      setGameState(POST);\n    }\n  };\n\n  const CountCard = (cards) => {\n    let score = 0;\n    let allAs = 0;\n    for (let x in cards) {\n      if (cards[x].rank === 'A') {\n        allAs++;\n      }\n      score += RanksValues[cards[x].rank];\n    }\n\n    for (let i = 0; i < allAs; i++) {\n      if (score > 21) {\n        score -= 9;\n      }\n    }\n\n    return score;\n  };\n\n  const DealerHit = () => {\n    const newCards = {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    };\n    const updatedCards = dealerCards.concat(newCards);\n    let score = CountCard(updatedCards);\n\n    setDealerScore(score);\n    setDealerCards(updatedCards);\n\n    if (score > 21) {\n      setTitle('You Win!');\n      setGameState(POST);\n      return;\n    }\n    if (score === playerScore) {\n      setTitle('You Tie!');\n      setGameState(POST);\n      return;\n    }\n    if (playerScore < score) {\n      setTitle('You Lose!');\n      setGameState(POST);\n    }\n  };\n\n  const Stand = () => {\n    setGameState(STAND);\n    if (playerScore < dealerScore) {\n      setTitle('You Lose!');\n      setGameState(POST);\n    }\n  };\n\n  const Reset = () => {\n    setPlayerCards(Player);\n    setDealerCards(Dealer);\n    setPlayerScore(0);\n    setDealerScore(0);\n    setTitle('');\n  };\n\n  const StartGame = () => {\n    setGameState(GAME);\n    if (\n      (playerCards[0].rank === 'A' &&\n        RanksValues[playerCards[1].rank] === 10) ||\n      (playerCards[1].rank === 'A' && RanksValues[playerCards[0].rank] === 10)\n    ) {\n      setTitle('Blackjack!');\n      setGameState(POST);\n    }\n    setPlayerScore(\n      RanksValues[playerCards[0].rank] + RanksValues[playerCards[1].rank]\n    );\n    setDealerScore(\n      RanksValues[dealerCards[0].rank] + RanksValues[dealerCards[1].rank]\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"center\">\n        <img style={{ width: 400 }} alt=\"logo\" src={logo} />\n      </div>\n      <StarterCard cardList={dealerCards} gameState={gameState} dealer={true} />\n      <div className=\"center\">\n        <h1>{title}</h1>\n      </div>\n      <StarterCard\n        cardList={playerCards}\n        gameState={gameState}\n        dealer={false}\n      />\n      <div className=\"center\">\n        <Buttons\n          Hit={Hit}\n          Stand={Stand}\n          gameState={gameState}\n          setGameState={setGameState}\n          StartGame={StartGame}\n          Reset={Reset}\n          Result={DealerHit}\n        />\n      </div>\n      {/* <div className=\"center\">\n        <h1>Dealer: {dealerScore}</h1>\n      </div>\n      <div className=\"center\">\n        <h1>Player: {playerScore}</h1>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { playerChoice } from './reducers/card';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootReducer = combineReducers({ playerChoice });\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}