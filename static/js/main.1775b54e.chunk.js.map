{"version":3,"sources":["constants/CardInfo.js","actions/card.js","reducers/card.js","components/Card/Card.js","components/Card/CardList.js","App.js","reportWebVitals.js","index.js"],"names":["MENU","GAME","POST","Suits","Ranks","RanksValues","A","J","Q","K","HIT","startedCards","playerCards","Card","props","rank","deck","side","className","style","width","height","CardList","cards","cardComponent","map","user","i","suit","App","useState","gameState","setGameState","setPlayerCards","dealerCards","setDealerCards","title","setTitle","starterCard","rank1","Math","floor","random","length","rank2","suit1","suit2","player","setPlayer","dealer","setDealer","playerScore","setPlayerScore","dealerScore","setDealerScore","class","type","onClick","newCards","updatedCards","concat","setTimeout","DealerHit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","playerChoice","state","action","Object","assign","payload","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1775b54e.chunk.js","sourcesContent":["export const MENU = 'MENU';\r\nexport const GAME = 'GAME';\r\nexport const STAND = 'STAND';\r\nexport const POST = 'POST';\r\n\r\nexport const Suits = ['♠', '♥', '♦', '♣'];\r\n\r\nexport const Ranks = [\r\n  'A',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  '10',\r\n  'J',\r\n  'Q',\r\n  'K',\r\n];\r\n\r\nexport const RanksValues = {\r\n  A: 1,\r\n  2: 2,\r\n  3: 3,\r\n  4: 4,\r\n  5: 5,\r\n  6: 6,\r\n  7: 7,\r\n  8: 8,\r\n  9: 9,\r\n  10: 10,\r\n  J: 10,\r\n  Q: 10,\r\n  K: 10,\r\n};\r\n\r\nexport const Layouts = {};\r\n","import { Suits, Ranks, RanksValues, Layouts } from '../constants/CardInfo';\r\nexport const HIT = 'HIT';\r\n\r\n// export const Hit = () => {\r\n//   const newCards = playerCards.concat({\r\n//     rank: Ranks[Math.floor(Math.random() * Ranks.length)],\r\n//     suit: Suits[Math.floor(Math.random() * Suits.length)],\r\n//   });\r\n//   setPlayerCards(newCards);\r\n// };\r\n\r\nexport const hit = () => ({\r\n  type: HIT,\r\n  payload: {\r\n    rank: Ranks[Math.floor(Math.random() * Ranks.length)],\r\n    suit: Suits[Math.floor(Math.random() * Suits.length)],\r\n  },\r\n});\r\n","import { HIT } from '../actions/card';\r\n\r\nconst startedCards = {\r\n  playerCards: [],\r\n};\r\n\r\nexport const playerChoice = (state = startedCards, action) => {\r\n  switch (action.type) {\r\n    case HIT:\r\n      return Object.assign({}, state, {\r\n        playerCards: state.playerCards.concat(action.payload),\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const { rank, deck, side } = props;\r\n  return (\r\n    <div\r\n      className=\"bg-white dib br4 ba b--black ma1 grow f1 flex-column\"\r\n      style={{ width: 200, height: 280 }}\r\n    >\r\n      {side ? (\r\n        <div\r\n          className={\r\n            deck === '♠' || deck === '♣' ? 'center black ma3' : 'center red ma3'\r\n          }\r\n        >\r\n          <h2>{rank}</h2>\r\n          <h2>{deck}</h2>\r\n        </div>\r\n      ) : (\r\n        <div className=\"cardBack br4 ba b--black center\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = (props) => {\r\n  const { cards } = props;\r\n  const cardComponent = cards.map((user, i) => {\r\n    return (\r\n      <Card key={i} rank={cards[i].rank} deck={cards[i].suit} side={true} />\r\n    );\r\n  });\r\n  return <div>{cardComponent}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useState, useEffect, useReducer } from 'react';\nimport Card from './components/Card/Card';\nimport CardList from './components/Card/CardList';\nimport {\n  Suits,\n  Ranks,\n  RanksValues,\n  GAME,\n  MENU,\n  STAND,\n  POST,\n} from './constants/CardInfo';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hit } from './actions/card';\nimport 'tachyons';\nimport './App.css';\n\nfunction App() {\n  const [gameState, setGameState] = useState(MENU);\n  const [playerCards, setPlayerCards] = useState([]);\n  const [dealerCards, setDealerCards] = useState([]);\n  const [title, setTitle] = useState('BlackJack');\n  const starterCard = [\n    {\n      rank1: Ranks[Math.floor(Math.random() * Ranks.length)],\n      rank2: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit1: Suits[Math.floor(Math.random() * Suits.length)],\n      suit2: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n    {\n      rank1: Ranks[Math.floor(Math.random() * Ranks.length)],\n      rank2: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit1: Suits[Math.floor(Math.random() * Suits.length)],\n      suit2: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n  ];\n\n  const [player, setPlayer] = useState(starterCard[0]);\n  const [dealer, setDealer] = useState(starterCard[1]);\n\n  const [playerScore, setPlayerScore] = useState(0);\n  const [dealerScore, setDealerScore] = useState(0);\n\n  // useEffect(() => {\n  //   setPlayerScore(playerScore + RanksValues[playerCards[-1].rank]);\n  //   console.log(playerScore);\n  // }, [playerCards]);\n\n  const Hit = () => {\n    const newCards = {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    };\n    const updatedCards = playerCards.concat(newCards);\n\n    setPlayerScore(playerScore + RanksValues[newCards.rank]);\n    setPlayerCards(updatedCards);\n\n    if (playerScore + RanksValues[newCards.rank] > 21) {\n      setTitle('Bust!');\n      setGameState(POST);\n    }\n  };\n\n  const DealerHit = () => {\n    const newCards = {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    };\n    const updatedCards = dealerCards.concat(newCards);\n\n    setDealerScore(dealerScore + RanksValues[newCards.rank]);\n    setDealerCards(updatedCards);\n\n    if (dealerScore + RanksValues[newCards.rank] > 21) {\n      setTitle('You Win!');\n    }\n    setGameState(POST);\n  };\n\n  const Stand = () => {\n    setGameState(STAND);\n    if (playerScore < dealerScore) {\n      setTitle('You Lose!');\n      setGameState(POST);\n    }\n\n    setTimeout(() => {\n      if (playerScore >= dealerScore) {\n        DealerHit();\n      }\n      if (playerScore < dealerScore) {\n        setTitle('You Lose!');\n      } else {\n        setTitle('You Win!');\n      }\n    }, 1200);\n  };\n\n  const Reset = () => {\n    setPlayer(starterCard[0]);\n    setDealer(starterCard[1]);\n    setPlayerScore(0);\n    setDealerScore(0);\n    setPlayerCards([]);\n    setDealerCards([]);\n    setTitle('BlackJack');\n  };\n\n  const StartGame = () => {\n    setGameState(GAME);\n    setPlayerScore(RanksValues[player.rank1] + RanksValues[player.rank2]);\n    setDealerScore(RanksValues[dealer.rank1] + RanksValues[dealer.rank2]);\n  };\n\n  return (\n    <div className=\"ma4\">\n      <div className=\"center ma3\">\n        <Card\n          rank={dealer.rank1}\n          deck={dealer.suit1}\n          side={gameState === MENU ? false : true}\n        />\n        <Card\n          rank={dealer.rank2}\n          deck={dealer.suit2}\n          side={gameState === MENU || gameState === GAME ? false : true}\n        />\n        <CardList cards={dealerCards} />\n      </div>\n      <div className=\"center\">\n        <h1 class=\"f1 lh-title\">{title}</h1>\n      </div>\n      <div className=\"center ma3\">\n        <Card\n          rank={player.rank1}\n          deck={player.suit1}\n          side={gameState === MENU ? false : true}\n        />\n        <Card\n          rank={player.rank2}\n          deck={player.suit2}\n          side={gameState === MENU ? false : true}\n        />\n        <CardList cards={playerCards} />\n      </div>\n\n      <div className=\"center\">\n        {gameState === GAME ? (\n          <div>\n            <button\n              style={{ width: 150 }}\n              className=\"pa3 ma4 ba bg-yellow grow\"\n              type=\"submit\"\n              onClick={Hit}\n            >\n              Hit\n            </button>\n\n            <button\n              style={{ width: 150 }}\n              className=\"pa3 ma4 ba bg-yellow grow\"\n              type=\"submit\"\n              onClick={Stand}\n            >\n              Stand\n            </button>\n          </div>\n        ) : (\n          <button\n            style={{ width: 150 }}\n            className=\"pa3 ma4 ba bg-yellow grow\"\n            type=\"submit\"\n            onClick={\n              gameState === MENU\n                ? StartGame\n                : () => {\n                    setGameState(MENU);\n                    Reset();\n                  }\n            }\n          >\n            {gameState === MENU ? 'Start' : 'Menu'}\n          </button>\n        )}\n      </div>\n      {/* <div className=\"center\">\n        <h1>Dealer: {dealerScore}</h1>\n      </div>\n      <div className=\"center\">\n        <h1>Player: {playerScore}</h1>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { playerChoice } from './reducers/card';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootReducer = combineReducers({ playerChoice });\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}