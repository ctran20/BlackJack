{"version":3,"sources":["actions/bet.js","reducers/bet.js","constants/CardInfo.js","imgs/logo.png","imgs/ten.png","imgs/quart.png","imgs/half.png","imgs/hundred.png","imgs/onek.png","components/Buttons/StyledButton.js","components/Buttons/Buttons.js","components/Card/Card.js","components/Card/CardList.js","components/Card/StarterCard.js","components/Buttons/Chip.js","App.js","serviceWorker.js","reportWebVitals.js","index.js"],"names":["ADD_CHIP","TAKE_CHIP","BET_CHIP","addChip","amount","type","payload","takeChip","initialState","total","bet","MENU","GAME","STAND","POST","BET","LOSE","Suits","Ranks","RanksValues","A","J","Q","K","StyledButton","func","label","style","width","borderRadius","className","onClick","Buttons","Hit","Stand","StartGame","gameState","setGameState","Reset","Result","Bet","useSelector","state","setChips","dispatch","useDispatch","Card","props","rank","deck","side","height","CardList","cards","dealer","checkSide","i","cardComponent","map","user","suit","StarterCard","cardList","Chip","value","imgSrc","alt","src","App","Dealer","Math","floor","random","length","Player","useState","playerCards","setPlayerCards","dealerCards","setDealerCards","title","setTitle","playerScore","setPlayerScore","dealerScore","setDealerScore","CountCard","score","allAs","x","pickChip","logo","display","flexDirection","minWidth","paddingTop","newCards","updatedCards","concat","ten","quart","half","hundo","onek","textAlign","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","Object","assign","store","createStore","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8d01457a.chunk.js","sourcesContent":["export const ADD_CHIP = 'ADD_CHIP';\r\nexport const TAKE_CHIP = 'TAKE_CHIP';\r\nexport const BET_CHIP = 'BET_CHIP';\r\n\r\nexport const addChip = (amount) => ({\r\n  type: ADD_CHIP,\r\n  payload: amount,\r\n});\r\n\r\nexport const takeChip = (amount) => ({\r\n  type: TAKE_CHIP,\r\n  payload: amount,\r\n});\r\n\r\nexport const betChip = () => ({\r\n  type: BET_CHIP,\r\n});\r\n","import { ADD_CHIP, BET_CHIP, TAKE_CHIP } from '../actions/bet';\r\n\r\nconst initialState = {\r\n  total: 250,\r\n  bet: 0,\r\n};\r\n\r\nexport const setChips = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case ADD_CHIP:\r\n      return Object.assign({}, state, {\r\n        bet: state.bet + action.payload,\r\n        total: state.total - action.payload,\r\n      });\r\n    case BET_CHIP:\r\n      return Object.assign({}, state, {\r\n        bet: 0,\r\n      });\r\n    case TAKE_CHIP:\r\n      return Object.assign({}, state, {\r\n        total: state.total + action.payload,\r\n        bet: 0,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const MENU = 'MENU';\r\nexport const GAME = 'GAME';\r\nexport const STAND = 'STAND';\r\nexport const POST = 'POST';\r\nexport const BET = 'BET';\r\nexport const LOSE = 'LOSE';\r\n\r\nexport const Suits = ['♠', '♥', '♦', '♣'];\r\n\r\nexport const Ranks = [\r\n  'A',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  '10',\r\n  'J',\r\n  'Q',\r\n  'K',\r\n];\r\n\r\nexport const RanksValues = {\r\n  1: 1,\r\n  2: 2,\r\n  3: 3,\r\n  4: 4,\r\n  5: 5,\r\n  6: 6,\r\n  7: 7,\r\n  8: 8,\r\n  9: 9,\r\n  10: 10,\r\n  A: 10,\r\n  J: 10,\r\n  Q: 10,\r\n  K: 10,\r\n};\r\n\r\nexport const Layouts = {};\r\n","export default __webpack_public_path__ + \"static/media/logo.8d9a8e65.png\";","export default __webpack_public_path__ + \"static/media/ten.98b254a8.png\";","export default __webpack_public_path__ + \"static/media/quart.5813e63b.png\";","export default __webpack_public_path__ + \"static/media/half.fb24cbca.png\";","export default __webpack_public_path__ + \"static/media/hundred.10865141.png\";","export default __webpack_public_path__ + \"static/media/onek.75f1bf99.png\";","import React from 'react';\r\n\r\nconst StyledButton = ({ func, label }) => {\r\n  return (\r\n    <button\r\n      style={{ width: 150, borderRadius: 10 }}\r\n      className=\"pa3 ma4 ba b--black bg-yellow\"\r\n      type=\"submit\"\r\n      onClick={func}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default StyledButton;\r\n","import React from 'react';\r\nimport StyledButton from './StyledButton';\r\nimport { GAME, MENU, STAND, POST, BET, LOSE } from '../../constants/CardInfo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { takeChip } from '../../actions/bet';\r\n\r\nconst Buttons = ({\r\n  Hit,\r\n  Stand,\r\n  StartGame,\r\n  gameState,\r\n  setGameState,\r\n  Reset,\r\n  Result,\r\n  Bet,\r\n}) => {\r\n  const { total } = useSelector((state) => state.setChips);\r\n  const dispatch = useDispatch();\r\n  switch (gameState) {\r\n    case GAME:\r\n      return (\r\n        <div>\r\n          <StyledButton func={Hit} label=\"Hit\" />\r\n          <StyledButton func={Stand} label=\"Stand\" />\r\n        </div>\r\n      );\r\n    case BET:\r\n      return (\r\n        <div>\r\n          <StyledButton func={StartGame} label=\"Start\" />\r\n        </div>\r\n      );\r\n    case MENU:\r\n      return (\r\n        <div>\r\n          <StyledButton func={Bet} label=\"Start Game\" />\r\n        </div>\r\n      );\r\n    case STAND:\r\n      return (\r\n        <div>\r\n          <StyledButton func={Result} label=\"Next\" />\r\n        </div>\r\n      );\r\n    case LOSE:\r\n      return (\r\n        <div>\r\n          <StyledButton\r\n            func={() => {\r\n              setGameState(MENU);\r\n              dispatch(takeChip(250));\r\n            }}\r\n            label=\"Restart\"\r\n          />\r\n        </div>\r\n      );\r\n    case POST:\r\n      return (\r\n        <div>\r\n          <StyledButton\r\n            func={() => {\r\n              if (total === 0) {\r\n                setGameState('LOSE');\r\n              } else {\r\n                setGameState(MENU);\r\n              }\r\n              Reset();\r\n            }}\r\n            label=\"Menu\"\r\n          />\r\n        </div>\r\n      );\r\n    default:\r\n      return <div>{`Error! In ${gameState}`}</div>;\r\n  }\r\n};\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const { rank, deck, side } = props;\r\n  return (\r\n    <div\r\n      className=\"bg-white dib br4 ba b--black ma1 grow shadow-5 f1 flex-column\"\r\n      style={{ width: 145, height: 220 }}\r\n    >\r\n      {side ? (\r\n        <div\r\n          className={\r\n            deck === '♠' || deck === '♣' ? 'center black ma3' : 'center red ma3'\r\n          }\r\n        >\r\n          <h3>{rank}</h3>\r\n          <h3>{deck}</h3>\r\n        </div>\r\n      ) : (\r\n        <div className=\"cardBack br4 ba b--black center\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { GAME, MENU, BET } from '../../constants/CardInfo';\r\n\r\nconst CardList = ({ cards, gameState, dealer }) => {\r\n  const checkSide = (i) => {\r\n    if (i === 1 && dealer && gameState === GAME) {\r\n      return false;\r\n    } else if (i < 2 && (gameState === MENU || gameState === BET)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const cardComponent = cards.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        rank={cards[i].rank}\r\n        deck={cards[i].suit}\r\n        side={!!checkSide(i)}\r\n      />\r\n    );\r\n  });\r\n  return <div className=\"center\">{cardComponent}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport CardList from './CardList';\r\n\r\nconst StarterCard = ({ gameState, cardList, dealer }) => {\r\n  return (\r\n    <div className=\"center\">\r\n      <CardList cards={cardList} gameState={gameState} dealer={dealer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarterCard;\r\n","import React from 'react';\r\n\r\nconst Chip = ({ value, total, imgSrc, addChip }) => {\r\n  if (value > total) {\r\n    return <div></div>;\r\n  } else {\r\n    return (\r\n      <img\r\n        style={{ width: 100 }}\r\n        className=\"ma2 pointer grow\"\r\n        alt=\"chip\"\r\n        src={imgSrc}\r\n        onClick={() => {\r\n          addChip(value);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default Chip;\r\n","import React, { useState } from 'react';\nimport {\n  Suits,\n  Ranks,\n  RanksValues,\n  GAME,\n  MENU,\n  STAND,\n  POST,\n  BET,\n  LOSE,\n} from './constants/CardInfo';\nimport logo from './imgs/logo.png';\nimport ten from './imgs/ten.png';\nimport quart from './imgs/quart.png';\nimport half from './imgs/half.png';\nimport hundo from './imgs/hundred.png';\nimport onek from './imgs/onek.png';\nimport Buttons from './components/Buttons/Buttons';\nimport StarterCard from './components/Card/StarterCard';\nimport Chip from './components/Buttons/Chip';\n\nimport 'tachyons';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addChip, betChip, takeChip } from './actions/bet';\n\nfunction App() {\n  const Dealer = [\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n  ];\n  const Player = [\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n    {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    },\n  ];\n  const [gameState, setGameState] = useState(MENU);\n  const [playerCards, setPlayerCards] = useState(Player);\n  const [dealerCards, setDealerCards] = useState(Dealer);\n  const [title, setTitle] = useState('');\n  const [playerScore, setPlayerScore] = useState(0);\n  const [dealerScore, setDealerScore] = useState(0);\n  const { total, bet } = useSelector((state) => state.setChips);\n  const dispatch = useDispatch();\n\n  const Hit = () => {\n    const newCards = {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    };\n    const updatedCards = playerCards.concat(newCards);\n    let score = CountCard(updatedCards);\n\n    setPlayerScore(score);\n    setPlayerCards(updatedCards);\n\n    if (score > 21) {\n      setTitle('Bust!');\n      setGameState(POST);\n    }\n  };\n\n  const CountCard = (cards) => {\n    let score = 0;\n    let allAs = 0;\n    for (let x in cards) {\n      if (cards[x].rank === 'A') {\n        allAs++;\n      }\n      score += RanksValues[cards[x].rank];\n    }\n\n    for (let i = 0; i < allAs; i++) {\n      if (score > 21) {\n        score -= 9;\n      }\n    }\n\n    return score;\n  };\n\n  const DealerHit = () => {\n    const newCards = {\n      rank: Ranks[Math.floor(Math.random() * Ranks.length)],\n      suit: Suits[Math.floor(Math.random() * Suits.length)],\n    };\n    const updatedCards = dealerCards.concat(newCards);\n    let score = CountCard(updatedCards);\n\n    setDealerScore(score);\n    setDealerCards(updatedCards);\n\n    if (score > 21) {\n      setTitle('You Win!');\n      dispatch(takeChip(bet * 2));\n      setGameState(POST);\n      return;\n    }\n    if (score === playerScore) {\n      setTitle('Tie!');\n      dispatch(takeChip(bet));\n      setGameState(POST);\n      return;\n    }\n    if (playerScore < score) {\n      setTitle('Dealer Win!');\n      setGameState(POST);\n    }\n  };\n\n  const Stand = () => {\n    setGameState(STAND);\n    if (playerScore < dealerScore) {\n      setTitle('Dealer Win!');\n      setGameState(POST);\n    }\n  };\n\n  const Reset = () => {\n    setPlayerCards(Player);\n    setDealerCards(Dealer);\n    setPlayerScore(0);\n    setDealerScore(0);\n    dispatch(betChip());\n    setTitle('');\n  };\n\n  const Bet = () => {\n    setGameState(BET);\n    setTitle('$0');\n  };\n\n  const pickChip = (value) => {\n    dispatch(addChip(value));\n    setTitle(`$${value + bet}`);\n  };\n\n  const StartGame = () => {\n    setGameState(GAME);\n    if (\n      (playerCards[0].rank === 'A' &&\n        RanksValues[playerCards[1].rank] === 10) ||\n      (playerCards[1].rank === 'A' && RanksValues[playerCards[0].rank] === 10)\n    ) {\n      dispatch(takeChip(bet * 2));\n      setTitle('Blackjack!');\n      setGameState(POST);\n    }\n    setPlayerScore(\n      RanksValues[playerCards[0].rank] + RanksValues[playerCards[1].rank]\n    );\n    setDealerScore(\n      RanksValues[dealerCards[0].rank] + RanksValues[dealerCards[1].rank]\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"center\">\n        <img style={{ width: 300 }} alt=\"logo\" src={logo} />\n      </div>\n      {gameState === LOSE ? (\n        <div className=\"center f3\">\n          <h1>You've lost it all!</h1>\n\n          <Buttons gameState={gameState} setGameState={setGameState} />\n        </div>\n      ) : (\n        <div\n          className=\"center\"\n          style={{ display: 'flex', flexDirection: 'row' }}\n        >\n          <div style={{ width: '20%' }} />\n          <div style={{ width: '40%', minWidth: 350, paddingTop: '20px' }}>\n            <StarterCard\n              cardList={dealerCards}\n              gameState={gameState}\n              dealer={true}\n            />\n            <div className=\"center\">\n              <h1>{title}</h1>\n            </div>\n            <StarterCard\n              cardList={playerCards}\n              gameState={gameState}\n              dealer={false}\n            />\n            <div className=\"center\">\n              <Buttons\n                Hit={Hit}\n                Stand={Stand}\n                gameState={gameState}\n                setGameState={setGameState}\n                StartGame={StartGame}\n                Reset={Reset}\n                Result={DealerHit}\n                Bet={Bet}\n                addChip={addChip}\n              />\n            </div>\n          </div>\n          <div className=\"bank\" style={{ width: '20%' }}>\n            {gameState === BET ? (\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <Chip\n                  value={10}\n                  total={total}\n                  addChip={pickChip}\n                  imgSrc={ten}\n                />\n                <Chip\n                  value={20}\n                  total={total}\n                  addChip={pickChip}\n                  imgSrc={quart}\n                />\n                <Chip\n                  value={50}\n                  total={total}\n                  addChip={pickChip}\n                  imgSrc={half}\n                />\n                <Chip\n                  value={100}\n                  total={total}\n                  addChip={pickChip}\n                  imgSrc={hundo}\n                />\n                <Chip\n                  value={1000}\n                  total={total}\n                  addChip={pickChip}\n                  imgSrc={onek}\n                />\n              </div>\n            ) : (\n              <div />\n            )}\n            <div\n              style={{\n                width: 105,\n                borderRadius: 5,\n                textAlign: 'center',\n              }}\n              className=\"pa1 ba b--black bg-yellow\"\n            >\n              <h2>{`Total: $${total}`}</h2>\n            </div>\n          </div>\n        </div>\n      )}\n      {/* <div className=\"center\">\n        <h1>Dealer: {dealerScore}</h1>\n      </div>\n      <div className=\"center\">\n        <h1>Player: {playerScore}</h1>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { setChips } from './reducers/bet';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootReducer = combineReducers({ setChips });\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nserviceWorker.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}